service: channel-api
# app and org for use with dashboard.serverless.com
#app: your-app-name
#org: your-org-name

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
frameworkVersion: '2'

plugins:
  - serverless-offline
  - serverless-dynamodb-local

custom:
  tableName: 'channels-${self:provider.stage}'
  region: 'eu-west-1'

provider:
  name: aws
  runtime: go1.x
  lambdaHashingVersion: 20201221
  stage: dev 
  region: ${self:custom.region}

  # IAM Roles
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource:
            - Fn::GetAtt: [ ChannelTable, Arn ]

  # Environment variables
  environment:
    CHANNELS_TABLE: ${self:custom.tableName}
    REGION: ${self:custom.region}

package:
  patterns:
    - '!./**'
    - ./bin/**

functions:
  api:
    handler: bin/api
    events:
      - http:
          path: /
          method: ANY
      - http:
          path: /{proxy+}
          method: ANY

  cron:
    handler: bin/cron
    events:
      - schedule:
          rate: rate(1 minute)
          enabled: false

resources:
  Resources:
    ChannelTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: channelID
            AttributeType: S
        KeySchema:
          - AttributeName: channelID
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:custom.tableName}